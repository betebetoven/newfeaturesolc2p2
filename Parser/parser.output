Terminals unused in grammar

    DIM
    AS
    THEN
    PRINT
    PRINTF
    INTERROGACION
    DOT
    LEFT_BRACKET
    RIGHT_BRACKET
    PUSH_FRONT
    DOT_PUSH_BACK
    STRUCT
    REMOVE
    MEDIAN
    IOTA
    MEAN
    SIZE
    ATOI
    GET
    '.'


State 14 conflicts: 3 shift/reduce
State 48 conflicts: 3 shift/reduce
State 61 conflicts: 1 shift/reduce
State 83 conflicts: 2 shift/reduce
State 87 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: s END

    1 s: lSentencia

    2 lSentencia: lSentencia sentencia z
    3           | sentencia z

    4 sentencia: declaracion_var
    5          | asignacion_var
    6          | imprimir
    7          | bloque
    8          | aumento
    9          | decremento
   10          | ciclo_for
   11          | ciclo_while
   12          | ins_if
   13          | escapa
   14          | retornovalor
   15          | declaracion_void
   16          | llamada
   17          | declaracion_vector

   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

   19 ciclo_while: WHILE '(' x ')' '{' lSentencia '}'

   20 ins_if: IF '(' x ')' '{' lSentencia '}'
   21       | IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia '}' ELSE ins_if

   23 escapa: BREAK
   24       | CONTINUE
   25       | RETORNO

   26 retornovalor: RETORNO x

   27 llamada: ID '(' lparam ')'
   28        | ID '(' ')'

   29 aumento: INCREMENT ID
   30        | ID INCREMENT

   31 decremento: DECREMENT ID
   32           | ID DECREMENT

   33 imprimir: IMPR '(' lparam ')'

   34 bloque: '{' lSentencia '}'

   35 z: ';'
   36  | %empty

   37 declaracion_void: tipo ID '(' ')' bloque
   38                 | tipo ID '(' lasig ')' bloque

   39 lasig: lasig ',' declaracion_var
   40      | declaracion_var

   41 lparam: lparam ',' x
   42       | x

   43 declaracion_var: tipo ID
   44                | tipo ID '=' x

   45 declaracion_vector: VECTOR MENOR tipo MAYOR ID
   46                   | VECTOR MENOR tipo MAYOR ID '=' '[' lparam ']'

   47 asignacion_var: ID '=' x

   48 x: cond

   49 cond: cond OR cond
   50     | cond AND cond
   51     | NOT cond
   52     | '(' cond ')'
   53     | expr oprel expr
   54     | expr

   55 oprel: MAYOR
   56      | MENOR
   57      | IGUAL_IGUAL
   58      | MENOR_IGUAL
   59      | MAYOR_IGUAL
   60      | DIFERENTE

   61 expr: expr SUMA expr
   62     | expr MENOS expr
   63     | expr MULTIPLICACION expr
   64     | expr DIVISION expr
   65     | expr MOD expr
   66     | expr EXPONENCIAL expr
   67     | '(' expr ')'
   68     | INCREMENT ID
   69     | ID INCREMENT
   70     | DECREMENT ID
   71     | ID DECREMENT
   72     | MENOS expr
   73     | NUMERO
   74     | ID
   75     | ID '[' lparam ']'
   76     | llamada
   77     | STRING
   78     | FLOAT
   79     | TRUE
   80     | FALSE

   81 tipo: INT
   82     | STR
   83     | FLO
   84     | BOOL
   85     | VOID


Terminals, with rules where they appear

    END (0) 0
    '(' (40) 18 19 20 21 22 27 28 33 37 38 52 67
    ')' (41) 18 19 20 21 22 27 28 33 37 38 52 67
    ',' (44) 39 41
    '.' (46)
    ';' (59) 35
    '=' (61) 44 46 47
    '[' (91) 46 75
    ']' (93) 46 75
    '{' (123) 18 19 20 21 22 34
    '}' (125) 18 19 20 21 22 34
    error (256)
    NUMERO <std::string> (258) 73
    ID <std::string> (259) 27 28 29 30 31 32 37 38 43 44 45 46 47 68 69 70 71 74 75
    STRING <std::string> (260) 77
    INT <std::string> (261) 81
    STR <std::string> (262) 82
    FLOAT <std::string> (263) 78
    FLO <std::string> (264) 83
    BOOL <std::string> (265) 84
    SUMA (266) 61
    MENOS (267) 62 72
    DIM (268)
    AS (269)
    IMPR (270) 33
    MOD (271) 65
    VOID (272) 85
    TRUE (273) 79
    FALSE (274) 80
    AND (275) 50
    NOT (276) 51
    IF (277) 20 21 22
    THEN (278)
    ELSE (279) 21 22
    WHILE (280) 19
    PRINT (281)
    PRINTF (282)
    FOR (283) 18
    MULTIPLICACION (284) 63
    DIVISION (285) 64
    EXPONENCIAL (286) 66
    MENOR_IGUAL (287) 58
    MAYOR_IGUAL (288) 59
    IGUAL_IGUAL (289) 57
    DIFERENTE (290) 60
    MENOR (291) 45 46 56
    MAYOR (292) 45 46 55
    OR (293) 49
    INTERROGACION (294)
    INCREMENT (295) 29 30 68 69
    DECREMENT (296) 31 32 70 71
    DOT (297)
    LEFT_BRACKET (298)
    RIGHT_BRACKET (299)
    VECTOR (300) 45 46
    PUSH_FRONT (301)
    DOT_PUSH_BACK (302)
    STRUCT (303)
    REMOVE (304)
    MEDIAN (305)
    IOTA (306)
    MEAN (307)
    SIZE (308)
    ATOI (309)
    GET (310)
    RETORNO (311) 25 26
    BREAK (312) 23
    CONTINUE (313) 24
    NEG (314)


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    s <QVector<AbstractExpr*>*> (71)
        on left: 1
        on right: 0
    lSentencia <QVector<AbstractExpr*>*> (72)
        on left: 2 3
        on right: 1 2 18 19 20 21 22 34
    sentencia <AbstractExpr*> (73)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 2 3
    ciclo_for <AbstractExpr*> (74)
        on left: 18
        on right: 10
    ciclo_while <AbstractExpr*> (75)
        on left: 19
        on right: 11
    ins_if <AbstractExpr*> (76)
        on left: 20 21 22
        on right: 12 22
    escapa <AbstractExpr*> (77)
        on left: 23 24 25
        on right: 13
    retornovalor <AbstractExpr*> (78)
        on left: 26
        on right: 14
    llamada <AbstractExpr*> (79)
        on left: 27 28
        on right: 16 76
    aumento <AbstractExpr*> (80)
        on left: 29 30
        on right: 8 18
    decremento <AbstractExpr*> (81)
        on left: 31 32
        on right: 9
    imprimir <NT_Imprimir*> (82)
        on left: 33
        on right: 6
    bloque <AbstractExpr*> (83)
        on left: 34
        on right: 7 37 38
    z (84)
        on left: 35 36
        on right: 2 3 18
    declaracion_void <AbstractExpr*> (85)
        on left: 37 38
        on right: 15
    lasig <QVector<AbstractExpr*>*> (86)
        on left: 39 40
        on right: 38 39
    lparam <QVector<AbstractExpr*>*> (87)
        on left: 41 42
        on right: 27 33 41 46 75
    declaracion_var <AbstractExpr*> (88)
        on left: 43 44
        on right: 4 18 39 40
    declaracion_vector <AbstractExpr*> (89)
        on left: 45 46
        on right: 17
    asignacion_var <AbstractExpr*> (90)
        on left: 47
        on right: 5
    x <AbstractExpr*> (91)
        on left: 48
        on right: 18 19 20 21 22 26 41 42 44 47
    cond <AbstractExpr*> (92)
        on left: 49 50 51 52 53 54
        on right: 48 49 50 51 52
    oprel <std::string> (93)
        on left: 55 56 57 58 59 60
        on right: 53
    expr <AbstractExpr*> (94)
        on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 53 54 61 62 63 64 65 66 67 72
    tipo <AbstractExpr*> (95)
        on left: 81 82 83 84 85
        on right: 37 38 43 44 45 46


State 0

    0 $accept: . s END

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    s                   go to state 18
    lSentencia          go to state 19
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 1

   27 llamada: ID . '(' lparam ')'
   28        | ID . '(' ')'
   30 aumento: ID . INCREMENT
   32 decremento: ID . DECREMENT
   47 asignacion_var: ID . '=' x

    INCREMENT  shift, and go to state 36
    DECREMENT  shift, and go to state 37
    '('        shift, and go to state 38
    '='        shift, and go to state 39


State 2

   81 tipo: INT .

    $default  reduce using rule 81 (tipo)


State 3

   82 tipo: STR .

    $default  reduce using rule 82 (tipo)


State 4

   83 tipo: FLO .

    $default  reduce using rule 83 (tipo)


State 5

   84 tipo: BOOL .

    $default  reduce using rule 84 (tipo)


State 6

   33 imprimir: IMPR . '(' lparam ')'

    '('  shift, and go to state 40


State 7

   85 tipo: VOID .

    $default  reduce using rule 85 (tipo)


State 8

   20 ins_if: IF . '(' x ')' '{' lSentencia '}'
   21       | IF . '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF . '(' x ')' '{' lSentencia '}' ELSE ins_if

    '('  shift, and go to state 41


State 9

   19 ciclo_while: WHILE . '(' x ')' '{' lSentencia '}'

    '('  shift, and go to state 42


State 10

   18 ciclo_for: FOR . '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

    '('  shift, and go to state 43


State 11

   29 aumento: INCREMENT . ID

    ID  shift, and go to state 44


State 12

   31 decremento: DECREMENT . ID

    ID  shift, and go to state 45


State 13

   45 declaracion_vector: VECTOR . MENOR tipo MAYOR ID
   46                   | VECTOR . MENOR tipo MAYOR ID '=' '[' lparam ']'

    MENOR  shift, and go to state 46


State 14

   25 escapa: RETORNO .
   26 retornovalor: RETORNO . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    ID         [reduce using rule 25 (escapa)]
    INCREMENT  [reduce using rule 25 (escapa)]
    DECREMENT  [reduce using rule 25 (escapa)]
    $default   reduce using rule 25 (escapa)

    llamada  go to state 58
    x        go to state 59
    cond     go to state 60
    expr     go to state 61


State 15

   23 escapa: BREAK .

    $default  reduce using rule 23 (escapa)


State 16

   24 escapa: CONTINUE .

    $default  reduce using rule 24 (escapa)


State 17

   34 bloque: '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 62
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 18

    0 $accept: s . END

    END  shift, and go to state 63


State 19

    1 s: lSentencia .
    2 lSentencia: lSentencia . sentencia z

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    $default  reduce using rule 1 (s)

    sentencia           go to state 64
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 20

    3 lSentencia: sentencia . z

    ';'  shift, and go to state 65

    $default  reduce using rule 36 (z)

    z  go to state 66


State 21

   10 sentencia: ciclo_for .

    $default  reduce using rule 10 (sentencia)


State 22

   11 sentencia: ciclo_while .

    $default  reduce using rule 11 (sentencia)


State 23

   12 sentencia: ins_if .

    $default  reduce using rule 12 (sentencia)


State 24

   13 sentencia: escapa .

    $default  reduce using rule 13 (sentencia)


State 25

   14 sentencia: retornovalor .

    $default  reduce using rule 14 (sentencia)


State 26

   16 sentencia: llamada .

    $default  reduce using rule 16 (sentencia)


State 27

    8 sentencia: aumento .

    $default  reduce using rule 8 (sentencia)


State 28

    9 sentencia: decremento .

    $default  reduce using rule 9 (sentencia)


State 29

    6 sentencia: imprimir .

    $default  reduce using rule 6 (sentencia)


State 30

    7 sentencia: bloque .

    $default  reduce using rule 7 (sentencia)


State 31

   15 sentencia: declaracion_void .

    $default  reduce using rule 15 (sentencia)


State 32

    4 sentencia: declaracion_var .

    $default  reduce using rule 4 (sentencia)


State 33

   17 sentencia: declaracion_vector .

    $default  reduce using rule 17 (sentencia)


State 34

    5 sentencia: asignacion_var .

    $default  reduce using rule 5 (sentencia)


State 35

   37 declaracion_void: tipo . ID '(' ')' bloque
   38                 | tipo . ID '(' lasig ')' bloque
   43 declaracion_var: tipo . ID
   44                | tipo . ID '=' x

    ID  shift, and go to state 67


State 36

   30 aumento: ID INCREMENT .

    $default  reduce using rule 30 (aumento)


State 37

   32 decremento: ID DECREMENT .

    $default  reduce using rule 32 (decremento)


State 38

   27 llamada: ID '(' . lparam ')'
   28        | ID '(' . ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57
    ')'        shift, and go to state 68

    llamada  go to state 58
    lparam   go to state 69
    x        go to state 70
    cond     go to state 60
    expr     go to state 61


State 39

   47 asignacion_var: ID '=' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    x        go to state 71
    cond     go to state 60
    expr     go to state 61


State 40

   33 imprimir: IMPR '(' . lparam ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    lparam   go to state 72
    x        go to state 70
    cond     go to state 60
    expr     go to state 61


State 41

   20 ins_if: IF '(' . x ')' '{' lSentencia '}'
   21       | IF '(' . x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' . x ')' '{' lSentencia '}' ELSE ins_if

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    x        go to state 73
    cond     go to state 60
    expr     go to state 61


State 42

   19 ciclo_while: WHILE '(' . x ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    x        go to state 74
    cond     go to state 60
    expr     go to state 61


State 43

   18 ciclo_for: FOR '(' . declaracion_var z x z aumento ')' '{' lSentencia '}'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 75
    tipo             go to state 76


State 44

   29 aumento: INCREMENT ID .

    $default  reduce using rule 29 (aumento)


State 45

   31 decremento: DECREMENT ID .

    $default  reduce using rule 31 (decremento)


State 46

   45 declaracion_vector: VECTOR MENOR . tipo MAYOR ID
   46                   | VECTOR MENOR . tipo MAYOR ID '=' '[' lparam ']'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    tipo  go to state 77


State 47

   73 expr: NUMERO .

    $default  reduce using rule 73 (expr)


State 48

   27 llamada: ID . '(' lparam ')'
   28        | ID . '(' ')'
   69 expr: ID . INCREMENT
   71     | ID . DECREMENT
   74     | ID .
   75     | ID . '[' lparam ']'

    INCREMENT  shift, and go to state 78
    DECREMENT  shift, and go to state 79
    '('        shift, and go to state 38
    '['        shift, and go to state 80

    INCREMENT  [reduce using rule 74 (expr)]
    DECREMENT  [reduce using rule 74 (expr)]
    '('        [reduce using rule 74 (expr)]
    $default   reduce using rule 74 (expr)


State 49

   77 expr: STRING .

    $default  reduce using rule 77 (expr)


State 50

   78 expr: FLOAT .

    $default  reduce using rule 78 (expr)


State 51

   72 expr: MENOS . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 82


State 52

   79 expr: TRUE .

    $default  reduce using rule 79 (expr)


State 53

   80 expr: FALSE .

    $default  reduce using rule 80 (expr)


State 54

   51 cond: NOT . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    cond     go to state 83
    expr     go to state 61


State 55

   68 expr: INCREMENT . ID

    ID  shift, and go to state 84


State 56

   70 expr: DECREMENT . ID

    ID  shift, and go to state 85


State 57

   52 cond: '(' . cond ')'
   67 expr: '(' . expr ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    cond     go to state 86
    expr     go to state 87


State 58

   76 expr: llamada .

    $default  reduce using rule 76 (expr)


State 59

   26 retornovalor: RETORNO x .

    $default  reduce using rule 26 (retornovalor)


State 60

   48 x: cond .
   49 cond: cond . OR cond
   50     | cond . AND cond

    AND  shift, and go to state 88
    OR   shift, and go to state 89

    $default  reduce using rule 48 (x)


State 61

   53 cond: expr . oprel expr
   54     | expr .
   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 90
    MENOS           shift, and go to state 91
    MOD             shift, and go to state 92
    MULTIPLICACION  shift, and go to state 93
    DIVISION        shift, and go to state 94
    EXPONENCIAL     shift, and go to state 95
    MENOR_IGUAL     shift, and go to state 96
    MAYOR_IGUAL     shift, and go to state 97
    IGUAL_IGUAL     shift, and go to state 98
    DIFERENTE       shift, and go to state 99
    MENOR           shift, and go to state 100
    MAYOR           shift, and go to state 101

    MENOS     [reduce using rule 54 (cond)]
    $default  reduce using rule 54 (cond)

    oprel  go to state 102


State 62

    2 lSentencia: lSentencia . sentencia z
   34 bloque: '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 103

    sentencia           go to state 64
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 63

    0 $accept: s END .

    $default  accept


State 64

    2 lSentencia: lSentencia sentencia . z

    ';'  shift, and go to state 65

    $default  reduce using rule 36 (z)

    z  go to state 104


State 65

   35 z: ';' .

    $default  reduce using rule 35 (z)


State 66

    3 lSentencia: sentencia z .

    $default  reduce using rule 3 (lSentencia)


State 67

   37 declaracion_void: tipo ID . '(' ')' bloque
   38                 | tipo ID . '(' lasig ')' bloque
   43 declaracion_var: tipo ID .
   44                | tipo ID . '=' x

    '('  shift, and go to state 105
    '='  shift, and go to state 106

    $default  reduce using rule 43 (declaracion_var)


State 68

   28 llamada: ID '(' ')' .

    $default  reduce using rule 28 (llamada)


State 69

   27 llamada: ID '(' lparam . ')'
   41 lparam: lparam . ',' x

    ')'  shift, and go to state 107
    ','  shift, and go to state 108


State 70

   42 lparam: x .

    $default  reduce using rule 42 (lparam)


State 71

   47 asignacion_var: ID '=' x .

    $default  reduce using rule 47 (asignacion_var)


State 72

   33 imprimir: IMPR '(' lparam . ')'
   41 lparam: lparam . ',' x

    ')'  shift, and go to state 109
    ','  shift, and go to state 108


State 73

   20 ins_if: IF '(' x . ')' '{' lSentencia '}'
   21       | IF '(' x . ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' x . ')' '{' lSentencia '}' ELSE ins_if

    ')'  shift, and go to state 110


State 74

   19 ciclo_while: WHILE '(' x . ')' '{' lSentencia '}'

    ')'  shift, and go to state 111


State 75

   18 ciclo_for: FOR '(' declaracion_var . z x z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 65

    $default  reduce using rule 36 (z)

    z  go to state 112


State 76

   43 declaracion_var: tipo . ID
   44                | tipo . ID '=' x

    ID  shift, and go to state 113


State 77

   45 declaracion_vector: VECTOR MENOR tipo . MAYOR ID
   46                   | VECTOR MENOR tipo . MAYOR ID '=' '[' lparam ']'

    MAYOR  shift, and go to state 114


State 78

   69 expr: ID INCREMENT .

    $default  reduce using rule 69 (expr)


State 79

   71 expr: ID DECREMENT .

    $default  reduce using rule 71 (expr)


State 80

   75 expr: ID '[' . lparam ']'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    lparam   go to state 115
    x        go to state 70
    cond     go to state 60
    expr     go to state 61


State 81

   67 expr: '(' . expr ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 116


State 82

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr
   72     | MENOS expr .

    EXPONENCIAL  shift, and go to state 95

    $default  reduce using rule 72 (expr)


State 83

   49 cond: cond . OR cond
   50     | cond . AND cond
   51     | NOT cond .

    AND  shift, and go to state 88
    OR   shift, and go to state 89

    AND       [reduce using rule 51 (cond)]
    OR        [reduce using rule 51 (cond)]
    $default  reduce using rule 51 (cond)


State 84

   68 expr: INCREMENT ID .

    $default  reduce using rule 68 (expr)


State 85

   70 expr: DECREMENT ID .

    $default  reduce using rule 70 (expr)


State 86

   49 cond: cond . OR cond
   50     | cond . AND cond
   52     | '(' cond . ')'

    AND  shift, and go to state 88
    OR   shift, and go to state 89
    ')'  shift, and go to state 117


State 87

   53 cond: expr . oprel expr
   54     | expr .
   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr
   67     | '(' expr . ')'

    SUMA            shift, and go to state 90
    MENOS           shift, and go to state 91
    MOD             shift, and go to state 92
    MULTIPLICACION  shift, and go to state 93
    DIVISION        shift, and go to state 94
    EXPONENCIAL     shift, and go to state 95
    MENOR_IGUAL     shift, and go to state 96
    MAYOR_IGUAL     shift, and go to state 97
    IGUAL_IGUAL     shift, and go to state 98
    DIFERENTE       shift, and go to state 99
    MENOR           shift, and go to state 100
    MAYOR           shift, and go to state 101
    ')'             shift, and go to state 118

    ')'       [reduce using rule 54 (cond)]
    $default  reduce using rule 54 (cond)

    oprel  go to state 102


State 88

   50 cond: cond AND . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    cond     go to state 119
    expr     go to state 61


State 89

   49 cond: cond OR . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    cond     go to state 120
    expr     go to state 61


State 90

   61 expr: expr SUMA . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 121


State 91

   62 expr: expr MENOS . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 122


State 92

   65 expr: expr MOD . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 123


State 93

   63 expr: expr MULTIPLICACION . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 124


State 94

   64 expr: expr DIVISION . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 125


State 95

   66 expr: expr EXPONENCIAL . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 126


State 96

   58 oprel: MENOR_IGUAL .

    $default  reduce using rule 58 (oprel)


State 97

   59 oprel: MAYOR_IGUAL .

    $default  reduce using rule 59 (oprel)


State 98

   57 oprel: IGUAL_IGUAL .

    $default  reduce using rule 57 (oprel)


State 99

   60 oprel: DIFERENTE .

    $default  reduce using rule 60 (oprel)


State 100

   56 oprel: MENOR .

    $default  reduce using rule 56 (oprel)


State 101

   55 oprel: MAYOR .

    $default  reduce using rule 55 (oprel)


State 102

   53 cond: expr oprel . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 81

    llamada  go to state 58
    expr     go to state 127


State 103

   34 bloque: '{' lSentencia '}' .

    $default  reduce using rule 34 (bloque)


State 104

    2 lSentencia: lSentencia sentencia z .

    $default  reduce using rule 2 (lSentencia)


State 105

   37 declaracion_void: tipo ID '(' . ')' bloque
   38                 | tipo ID '(' . lasig ')' bloque

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7
    ')'   shift, and go to state 128

    lasig            go to state 129
    declaracion_var  go to state 130
    tipo             go to state 76


State 106

   44 declaracion_var: tipo ID '=' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    x        go to state 131
    cond     go to state 60
    expr     go to state 61


State 107

   27 llamada: ID '(' lparam ')' .

    $default  reduce using rule 27 (llamada)


State 108

   41 lparam: lparam ',' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    x        go to state 132
    cond     go to state 60
    expr     go to state 61


State 109

   33 imprimir: IMPR '(' lparam ')' .

    $default  reduce using rule 33 (imprimir)


State 110

   20 ins_if: IF '(' x ')' . '{' lSentencia '}'
   21       | IF '(' x ')' . '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' x ')' . '{' lSentencia '}' ELSE ins_if

    '{'  shift, and go to state 133


State 111

   19 ciclo_while: WHILE '(' x ')' . '{' lSentencia '}'

    '{'  shift, and go to state 134


State 112

   18 ciclo_for: FOR '(' declaracion_var z . x z aumento ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    x        go to state 135
    cond     go to state 60
    expr     go to state 61


State 113

   43 declaracion_var: tipo ID .
   44                | tipo ID . '=' x

    '='  shift, and go to state 106

    $default  reduce using rule 43 (declaracion_var)


State 114

   45 declaracion_vector: VECTOR MENOR tipo MAYOR . ID
   46                   | VECTOR MENOR tipo MAYOR . ID '=' '[' lparam ']'

    ID  shift, and go to state 136


State 115

   41 lparam: lparam . ',' x
   75 expr: ID '[' lparam . ']'

    ']'  shift, and go to state 137
    ','  shift, and go to state 108


State 116

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr
   67     | '(' expr . ')'

    SUMA            shift, and go to state 90
    MENOS           shift, and go to state 91
    MOD             shift, and go to state 92
    MULTIPLICACION  shift, and go to state 93
    DIVISION        shift, and go to state 94
    EXPONENCIAL     shift, and go to state 95
    ')'             shift, and go to state 118


State 117

   52 cond: '(' cond ')' .

    $default  reduce using rule 52 (cond)


State 118

   67 expr: '(' expr ')' .

    $default  reduce using rule 67 (expr)


State 119

   49 cond: cond . OR cond
   50     | cond . AND cond
   50     | cond AND cond .

    $default  reduce using rule 50 (cond)


State 120

   49 cond: cond . OR cond
   49     | cond OR cond .
   50     | cond . AND cond

    AND  shift, and go to state 88

    $default  reduce using rule 49 (cond)


State 121

   61 expr: expr . SUMA expr
   61     | expr SUMA expr .
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 92
    MULTIPLICACION  shift, and go to state 93
    DIVISION        shift, and go to state 94
    EXPONENCIAL     shift, and go to state 95

    $default  reduce using rule 61 (expr)


State 122

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   62     | expr MENOS expr .
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 92
    MULTIPLICACION  shift, and go to state 93
    DIVISION        shift, and go to state 94
    EXPONENCIAL     shift, and go to state 95

    $default  reduce using rule 62 (expr)


State 123

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   65     | expr MOD expr .
   66     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 95

    $default  reduce using rule 65 (expr)


State 124

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   63     | expr MULTIPLICACION expr .
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 95

    $default  reduce using rule 63 (expr)


State 125

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   64     | expr DIVISION expr .
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 95

    $default  reduce using rule 64 (expr)


State 126

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr
   66     | expr EXPONENCIAL expr .

    EXPONENCIAL  shift, and go to state 95

    $default  reduce using rule 66 (expr)


State 127

   53 cond: expr oprel expr .
   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 90
    MENOS           shift, and go to state 91
    MOD             shift, and go to state 92
    MULTIPLICACION  shift, and go to state 93
    DIVISION        shift, and go to state 94
    EXPONENCIAL     shift, and go to state 95

    MENOS     [reduce using rule 53 (cond)]
    $default  reduce using rule 53 (cond)


State 128

   37 declaracion_void: tipo ID '(' ')' . bloque

    '{'  shift, and go to state 17

    bloque  go to state 138


State 129

   38 declaracion_void: tipo ID '(' lasig . ')' bloque
   39 lasig: lasig . ',' declaracion_var

    ')'  shift, and go to state 139
    ','  shift, and go to state 140


State 130

   40 lasig: declaracion_var .

    $default  reduce using rule 40 (lasig)


State 131

   44 declaracion_var: tipo ID '=' x .

    $default  reduce using rule 44 (declaracion_var)


State 132

   41 lparam: lparam ',' x .

    $default  reduce using rule 41 (lparam)


State 133

   20 ins_if: IF '(' x ')' '{' . lSentencia '}'
   21       | IF '(' x ')' '{' . lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' x ')' '{' . lSentencia '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 141
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 134

   19 ciclo_while: WHILE '(' x ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 142
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 135

   18 ciclo_for: FOR '(' declaracion_var z x . z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 65

    $default  reduce using rule 36 (z)

    z  go to state 143


State 136

   45 declaracion_vector: VECTOR MENOR tipo MAYOR ID .
   46                   | VECTOR MENOR tipo MAYOR ID . '=' '[' lparam ']'

    '='  shift, and go to state 144

    $default  reduce using rule 45 (declaracion_vector)


State 137

   75 expr: ID '[' lparam ']' .

    $default  reduce using rule 75 (expr)


State 138

   37 declaracion_void: tipo ID '(' ')' bloque .

    $default  reduce using rule 37 (declaracion_void)


State 139

   38 declaracion_void: tipo ID '(' lasig ')' . bloque

    '{'  shift, and go to state 17

    bloque  go to state 145


State 140

   39 lasig: lasig ',' . declaracion_var

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 146
    tipo             go to state 76


State 141

    2 lSentencia: lSentencia . sentencia z
   20 ins_if: IF '(' x ')' '{' lSentencia . '}'
   21       | IF '(' x ')' '{' lSentencia . '}' ELSE '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia . '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 147

    sentencia           go to state 64
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 142

    2 lSentencia: lSentencia . sentencia z
   19 ciclo_while: WHILE '(' x ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 148

    sentencia           go to state 64
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 143

   18 ciclo_for: FOR '(' declaracion_var z x z . aumento ')' '{' lSentencia '}'

    ID         shift, and go to state 149
    INCREMENT  shift, and go to state 11

    aumento  go to state 150


State 144

   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' . '[' lparam ']'

    '['  shift, and go to state 151


State 145

   38 declaracion_void: tipo ID '(' lasig ')' bloque .

    $default  reduce using rule 38 (declaracion_void)


State 146

   39 lasig: lasig ',' declaracion_var .

    $default  reduce using rule 39 (lasig)


State 147

   20 ins_if: IF '(' x ')' '{' lSentencia '}' .
   21       | IF '(' x ')' '{' lSentencia '}' . ELSE '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia '}' . ELSE ins_if

    ELSE  shift, and go to state 152

    $default  reduce using rule 20 (ins_if)


State 148

   19 ciclo_while: WHILE '(' x ')' '{' lSentencia '}' .

    $default  reduce using rule 19 (ciclo_while)


State 149

   30 aumento: ID . INCREMENT

    INCREMENT  shift, and go to state 36


State 150

   18 ciclo_for: FOR '(' declaracion_var z x z aumento . ')' '{' lSentencia '}'

    ')'  shift, and go to state 153


State 151

   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' . lparam ']'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    llamada  go to state 58
    lparam   go to state 154
    x        go to state 70
    cond     go to state 60
    expr     go to state 61


State 152

   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE . '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia '}' ELSE . ins_if

    IF   shift, and go to state 8
    '{'  shift, and go to state 155

    ins_if  go to state 156


State 153

   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' . '{' lSentencia '}'

    '{'  shift, and go to state 157


State 154

   41 lparam: lparam . ',' x
   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' lparam . ']'

    ']'  shift, and go to state 158
    ','  shift, and go to state 108


State 155

   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 159
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 156

   22 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE ins_if .

    $default  reduce using rule 22 (ins_if)


State 157

   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 160
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 158

   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' lparam ']' .

    $default  reduce using rule 46 (declaracion_vector)


State 159

    2 lSentencia: lSentencia . sentencia z
   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 161

    sentencia           go to state 64
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 160

    2 lSentencia: lSentencia . sentencia z
   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 162

    sentencia           go to state 64
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 161

   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}' .

    $default  reduce using rule 21 (ins_if)


State 162

   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}' .

    $default  reduce using rule 18 (ciclo_for)
