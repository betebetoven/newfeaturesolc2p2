Terminals unused in grammar

    DIM
    AS
    THEN
    PRINT
    PRINTF
    INTERROGACION
    DOT
    LEFT_BRACKET
    RIGHT_BRACKET
    PUSH_FRONT
    DOT_PUSH_BACK
    STRUCT
    REMOVE
    MEDIAN
    IOTA
    MEAN
    SIZE
    ATOI
    GET
    '.'


State 14 conflicts: 3 shift/reduce
State 50 conflicts: 3 shift/reduce
State 63 conflicts: 1 shift/reduce
State 86 conflicts: 2 shift/reduce
State 90 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce


Grammar

    0 $accept: s END

    1 s: lSentencia

    2 lSentencia: lSentencia sentencia z
    3           | sentencia z

    4 sentencia: declaracion_var
    5          | asignacion_var
    6          | imprimir
    7          | bloque
    8          | aumento
    9          | decremento
   10          | ciclo_for
   11          | ciclo_while
   12          | ins_if
   13          | escapa
   14          | retornovalor
   15          | declaracion_void
   16          | llamada
   17          | declaracion_vector
   18          | asignacion_vector

   19 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

   20 ciclo_while: WHILE '(' x ')' '{' lSentencia '}'

   21 ins_if: IF '(' x ')' '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   23       | IF '(' x ')' '{' lSentencia '}' ELSE ins_if

   24 escapa: BREAK
   25       | CONTINUE
   26       | RETORNO

   27 retornovalor: RETORNO x

   28 llamada: ID '(' lparam ')'
   29        | ID '(' ')'

   30 aumento: INCREMENT ID
   31        | ID INCREMENT

   32 decremento: DECREMENT ID
   33           | ID DECREMENT

   34 imprimir: IMPR '(' lparam ')'

   35 bloque: '{' lSentencia '}'

   36 z: ';'
   37  | %empty

   38 declaracion_void: tipo ID '(' ')' bloque
   39                 | tipo ID '(' lasig ')' bloque

   40 lasig: lasig ',' declaracion_var
   41      | declaracion_var

   42 lparam: lparam ',' x
   43       | x

   44 declaracion_var: tipo ID
   45                | tipo ID '=' x

   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID
   47                   | VECTOR MENOR tipo MAYOR ID '=' '[' lparam ']'

   48 asignacion_var: ID '=' x

   49 asignacion_vector: ID '[' lparam ']' '=' x

   50 x: cond

   51 cond: cond OR cond
   52     | cond AND cond
   53     | NOT cond
   54     | '(' cond ')'
   55     | expr oprel expr
   56     | expr

   57 oprel: MAYOR
   58      | MENOR
   59      | IGUAL_IGUAL
   60      | MENOR_IGUAL
   61      | MAYOR_IGUAL
   62      | DIFERENTE

   63 expr: expr SUMA expr
   64     | expr MENOS expr
   65     | expr MULTIPLICACION expr
   66     | expr DIVISION expr
   67     | expr MOD expr
   68     | expr EXPONENCIAL expr
   69     | '(' expr ')'
   70     | INCREMENT ID
   71     | ID INCREMENT
   72     | DECREMENT ID
   73     | ID DECREMENT
   74     | MENOS expr
   75     | NUMERO
   76     | ID
   77     | ID '[' lparam ']'
   78     | llamada
   79     | STRING
   80     | FLOAT
   81     | TRUE
   82     | FALSE

   83 tipo: INT
   84     | STR
   85     | FLO
   86     | BOOL
   87     | VOID


Terminals, with rules where they appear

    END (0) 0
    '(' (40) 19 20 21 22 23 28 29 34 38 39 54 69
    ')' (41) 19 20 21 22 23 28 29 34 38 39 54 69
    ',' (44) 40 42
    '.' (46)
    ';' (59) 36
    '=' (61) 45 47 48 49
    '[' (91) 47 49 77
    ']' (93) 47 49 77
    '{' (123) 19 20 21 22 23 35
    '}' (125) 19 20 21 22 23 35
    error (256)
    NUMERO <std::string> (258) 75
    ID <std::string> (259) 28 29 30 31 32 33 38 39 44 45 46 47 48 49 70 71 72 73 76 77
    STRING <std::string> (260) 79
    INT <std::string> (261) 83
    STR <std::string> (262) 84
    FLOAT <std::string> (263) 80
    FLO <std::string> (264) 85
    BOOL <std::string> (265) 86
    SUMA (266) 63
    MENOS (267) 64 74
    DIM (268)
    AS (269)
    IMPR (270) 34
    MOD (271) 67
    VOID (272) 87
    TRUE (273) 81
    FALSE (274) 82
    AND (275) 52
    NOT (276) 53
    IF (277) 21 22 23
    THEN (278)
    ELSE (279) 22 23
    WHILE (280) 20
    PRINT (281)
    PRINTF (282)
    FOR (283) 19
    MULTIPLICACION (284) 65
    DIVISION (285) 66
    EXPONENCIAL (286) 68
    MENOR_IGUAL (287) 60
    MAYOR_IGUAL (288) 61
    IGUAL_IGUAL (289) 59
    DIFERENTE (290) 62
    MENOR (291) 46 47 58
    MAYOR (292) 46 47 57
    OR (293) 51
    INTERROGACION (294)
    INCREMENT (295) 30 31 70 71
    DECREMENT (296) 32 33 72 73
    DOT (297)
    LEFT_BRACKET (298)
    RIGHT_BRACKET (299)
    VECTOR (300) 46 47
    PUSH_FRONT (301)
    DOT_PUSH_BACK (302)
    STRUCT (303)
    REMOVE (304)
    MEDIAN (305)
    IOTA (306)
    MEAN (307)
    SIZE (308)
    ATOI (309)
    GET (310)
    RETORNO (311) 26 27
    BREAK (312) 24
    CONTINUE (313) 25
    NEG (314)


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    s <QVector<AbstractExpr*>*> (71)
        on left: 1
        on right: 0
    lSentencia <QVector<AbstractExpr*>*> (72)
        on left: 2 3
        on right: 1 2 19 20 21 22 23 35
    sentencia <AbstractExpr*> (73)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
        on right: 2 3
    ciclo_for <AbstractExpr*> (74)
        on left: 19
        on right: 10
    ciclo_while <AbstractExpr*> (75)
        on left: 20
        on right: 11
    ins_if <AbstractExpr*> (76)
        on left: 21 22 23
        on right: 12 23
    escapa <AbstractExpr*> (77)
        on left: 24 25 26
        on right: 13
    retornovalor <AbstractExpr*> (78)
        on left: 27
        on right: 14
    llamada <AbstractExpr*> (79)
        on left: 28 29
        on right: 16 78
    aumento <AbstractExpr*> (80)
        on left: 30 31
        on right: 8 19
    decremento <AbstractExpr*> (81)
        on left: 32 33
        on right: 9
    imprimir <NT_Imprimir*> (82)
        on left: 34
        on right: 6
    bloque <AbstractExpr*> (83)
        on left: 35
        on right: 7 38 39
    z (84)
        on left: 36 37
        on right: 2 3 19
    declaracion_void <AbstractExpr*> (85)
        on left: 38 39
        on right: 15
    lasig <QVector<AbstractExpr*>*> (86)
        on left: 40 41
        on right: 39 40
    lparam <QVector<AbstractExpr*>*> (87)
        on left: 42 43
        on right: 28 34 42 47 49 77
    declaracion_var <AbstractExpr*> (88)
        on left: 44 45
        on right: 4 19 40 41
    declaracion_vector <AbstractExpr*> (89)
        on left: 46 47
        on right: 17
    asignacion_var <AbstractExpr*> (90)
        on left: 48
        on right: 5
    asignacion_vector <AbstractExpr*> (91)
        on left: 49
        on right: 18
    x <AbstractExpr*> (92)
        on left: 50
        on right: 19 20 21 22 23 27 42 43 45 48 49
    cond <AbstractExpr*> (93)
        on left: 51 52 53 54 55 56
        on right: 50 51 52 53 54
    oprel <std::string> (94)
        on left: 57 58 59 60 61 62
        on right: 55
    expr <AbstractExpr*> (95)
        on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82
        on right: 55 56 63 64 65 66 67 68 69 74
    tipo <AbstractExpr*> (96)
        on left: 83 84 85 86 87
        on right: 38 39 44 45 46 47


State 0

    0 $accept: . s END

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    s                   go to state 18
    lSentencia          go to state 19
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 1

   28 llamada: ID . '(' lparam ')'
   29        | ID . '(' ')'
   31 aumento: ID . INCREMENT
   33 decremento: ID . DECREMENT
   48 asignacion_var: ID . '=' x
   49 asignacion_vector: ID . '[' lparam ']' '=' x

    INCREMENT  shift, and go to state 37
    DECREMENT  shift, and go to state 38
    '('        shift, and go to state 39
    '='        shift, and go to state 40
    '['        shift, and go to state 41


State 2

   83 tipo: INT .

    $default  reduce using rule 83 (tipo)


State 3

   84 tipo: STR .

    $default  reduce using rule 84 (tipo)


State 4

   85 tipo: FLO .

    $default  reduce using rule 85 (tipo)


State 5

   86 tipo: BOOL .

    $default  reduce using rule 86 (tipo)


State 6

   34 imprimir: IMPR . '(' lparam ')'

    '('  shift, and go to state 42


State 7

   87 tipo: VOID .

    $default  reduce using rule 87 (tipo)


State 8

   21 ins_if: IF . '(' x ')' '{' lSentencia '}'
   22       | IF . '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   23       | IF . '(' x ')' '{' lSentencia '}' ELSE ins_if

    '('  shift, and go to state 43


State 9

   20 ciclo_while: WHILE . '(' x ')' '{' lSentencia '}'

    '('  shift, and go to state 44


State 10

   19 ciclo_for: FOR . '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

    '('  shift, and go to state 45


State 11

   30 aumento: INCREMENT . ID

    ID  shift, and go to state 46


State 12

   32 decremento: DECREMENT . ID

    ID  shift, and go to state 47


State 13

   46 declaracion_vector: VECTOR . MENOR tipo MAYOR ID
   47                   | VECTOR . MENOR tipo MAYOR ID '=' '[' lparam ']'

    MENOR  shift, and go to state 48


State 14

   26 escapa: RETORNO .
   27 retornovalor: RETORNO . x

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    ID         [reduce using rule 26 (escapa)]
    INCREMENT  [reduce using rule 26 (escapa)]
    DECREMENT  [reduce using rule 26 (escapa)]
    $default   reduce using rule 26 (escapa)

    llamada  go to state 60
    x        go to state 61
    cond     go to state 62
    expr     go to state 63


State 15

   24 escapa: BREAK .

    $default  reduce using rule 24 (escapa)


State 16

   25 escapa: CONTINUE .

    $default  reduce using rule 25 (escapa)


State 17

   35 bloque: '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 64
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 18

    0 $accept: s . END

    END  shift, and go to state 65


State 19

    1 s: lSentencia .
    2 lSentencia: lSentencia . sentencia z

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    $default  reduce using rule 1 (s)

    sentencia           go to state 66
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 20

    3 lSentencia: sentencia . z

    ';'  shift, and go to state 67

    $default  reduce using rule 37 (z)

    z  go to state 68


State 21

   10 sentencia: ciclo_for .

    $default  reduce using rule 10 (sentencia)


State 22

   11 sentencia: ciclo_while .

    $default  reduce using rule 11 (sentencia)


State 23

   12 sentencia: ins_if .

    $default  reduce using rule 12 (sentencia)


State 24

   13 sentencia: escapa .

    $default  reduce using rule 13 (sentencia)


State 25

   14 sentencia: retornovalor .

    $default  reduce using rule 14 (sentencia)


State 26

   16 sentencia: llamada .

    $default  reduce using rule 16 (sentencia)


State 27

    8 sentencia: aumento .

    $default  reduce using rule 8 (sentencia)


State 28

    9 sentencia: decremento .

    $default  reduce using rule 9 (sentencia)


State 29

    6 sentencia: imprimir .

    $default  reduce using rule 6 (sentencia)


State 30

    7 sentencia: bloque .

    $default  reduce using rule 7 (sentencia)


State 31

   15 sentencia: declaracion_void .

    $default  reduce using rule 15 (sentencia)


State 32

    4 sentencia: declaracion_var .

    $default  reduce using rule 4 (sentencia)


State 33

   17 sentencia: declaracion_vector .

    $default  reduce using rule 17 (sentencia)


State 34

    5 sentencia: asignacion_var .

    $default  reduce using rule 5 (sentencia)


State 35

   18 sentencia: asignacion_vector .

    $default  reduce using rule 18 (sentencia)


State 36

   38 declaracion_void: tipo . ID '(' ')' bloque
   39                 | tipo . ID '(' lasig ')' bloque
   44 declaracion_var: tipo . ID
   45                | tipo . ID '=' x

    ID  shift, and go to state 69


State 37

   31 aumento: ID INCREMENT .

    $default  reduce using rule 31 (aumento)


State 38

   33 decremento: ID DECREMENT .

    $default  reduce using rule 33 (decremento)


State 39

   28 llamada: ID '(' . lparam ')'
   29        | ID '(' . ')'

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59
    ')'        shift, and go to state 70

    llamada  go to state 60
    lparam   go to state 71
    x        go to state 72
    cond     go to state 62
    expr     go to state 63


State 40

   48 asignacion_var: ID '=' . x

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    x        go to state 73
    cond     go to state 62
    expr     go to state 63


State 41

   49 asignacion_vector: ID '[' . lparam ']' '=' x

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    lparam   go to state 74
    x        go to state 72
    cond     go to state 62
    expr     go to state 63


State 42

   34 imprimir: IMPR '(' . lparam ')'

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    lparam   go to state 75
    x        go to state 72
    cond     go to state 62
    expr     go to state 63


State 43

   21 ins_if: IF '(' . x ')' '{' lSentencia '}'
   22       | IF '(' . x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   23       | IF '(' . x ')' '{' lSentencia '}' ELSE ins_if

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    x        go to state 76
    cond     go to state 62
    expr     go to state 63


State 44

   20 ciclo_while: WHILE '(' . x ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    x        go to state 77
    cond     go to state 62
    expr     go to state 63


State 45

   19 ciclo_for: FOR '(' . declaracion_var z x z aumento ')' '{' lSentencia '}'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 78
    tipo             go to state 79


State 46

   30 aumento: INCREMENT ID .

    $default  reduce using rule 30 (aumento)


State 47

   32 decremento: DECREMENT ID .

    $default  reduce using rule 32 (decremento)


State 48

   46 declaracion_vector: VECTOR MENOR . tipo MAYOR ID
   47                   | VECTOR MENOR . tipo MAYOR ID '=' '[' lparam ']'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    tipo  go to state 80


State 49

   75 expr: NUMERO .

    $default  reduce using rule 75 (expr)


State 50

   28 llamada: ID . '(' lparam ')'
   29        | ID . '(' ')'
   71 expr: ID . INCREMENT
   73     | ID . DECREMENT
   76     | ID .
   77     | ID . '[' lparam ']'

    INCREMENT  shift, and go to state 81
    DECREMENT  shift, and go to state 82
    '('        shift, and go to state 39
    '['        shift, and go to state 83

    INCREMENT  [reduce using rule 76 (expr)]
    DECREMENT  [reduce using rule 76 (expr)]
    '('        [reduce using rule 76 (expr)]
    $default   reduce using rule 76 (expr)


State 51

   79 expr: STRING .

    $default  reduce using rule 79 (expr)


State 52

   80 expr: FLOAT .

    $default  reduce using rule 80 (expr)


State 53

   74 expr: MENOS . expr

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 85


State 54

   81 expr: TRUE .

    $default  reduce using rule 81 (expr)


State 55

   82 expr: FALSE .

    $default  reduce using rule 82 (expr)


State 56

   53 cond: NOT . cond

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    cond     go to state 86
    expr     go to state 63


State 57

   70 expr: INCREMENT . ID

    ID  shift, and go to state 87


State 58

   72 expr: DECREMENT . ID

    ID  shift, and go to state 88


State 59

   54 cond: '(' . cond ')'
   69 expr: '(' . expr ')'

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    cond     go to state 89
    expr     go to state 90


State 60

   78 expr: llamada .

    $default  reduce using rule 78 (expr)


State 61

   27 retornovalor: RETORNO x .

    $default  reduce using rule 27 (retornovalor)


State 62

   50 x: cond .
   51 cond: cond . OR cond
   52     | cond . AND cond

    AND  shift, and go to state 91
    OR   shift, and go to state 92

    $default  reduce using rule 50 (x)


State 63

   55 cond: expr . oprel expr
   56     | expr .
   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 93
    MENOS           shift, and go to state 94
    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98
    MENOR_IGUAL     shift, and go to state 99
    MAYOR_IGUAL     shift, and go to state 100
    IGUAL_IGUAL     shift, and go to state 101
    DIFERENTE       shift, and go to state 102
    MENOR           shift, and go to state 103
    MAYOR           shift, and go to state 104

    MENOS     [reduce using rule 56 (cond)]
    $default  reduce using rule 56 (cond)

    oprel  go to state 105


State 64

    2 lSentencia: lSentencia . sentencia z
   35 bloque: '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 106

    sentencia           go to state 66
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 65

    0 $accept: s END .

    $default  accept


State 66

    2 lSentencia: lSentencia sentencia . z

    ';'  shift, and go to state 67

    $default  reduce using rule 37 (z)

    z  go to state 107


State 67

   36 z: ';' .

    $default  reduce using rule 36 (z)


State 68

    3 lSentencia: sentencia z .

    $default  reduce using rule 3 (lSentencia)


State 69

   38 declaracion_void: tipo ID . '(' ')' bloque
   39                 | tipo ID . '(' lasig ')' bloque
   44 declaracion_var: tipo ID .
   45                | tipo ID . '=' x

    '('  shift, and go to state 108
    '='  shift, and go to state 109

    $default  reduce using rule 44 (declaracion_var)


State 70

   29 llamada: ID '(' ')' .

    $default  reduce using rule 29 (llamada)


State 71

   28 llamada: ID '(' lparam . ')'
   42 lparam: lparam . ',' x

    ')'  shift, and go to state 110
    ','  shift, and go to state 111


State 72

   43 lparam: x .

    $default  reduce using rule 43 (lparam)


State 73

   48 asignacion_var: ID '=' x .

    $default  reduce using rule 48 (asignacion_var)


State 74

   42 lparam: lparam . ',' x
   49 asignacion_vector: ID '[' lparam . ']' '=' x

    ']'  shift, and go to state 112
    ','  shift, and go to state 111


State 75

   34 imprimir: IMPR '(' lparam . ')'
   42 lparam: lparam . ',' x

    ')'  shift, and go to state 113
    ','  shift, and go to state 111


State 76

   21 ins_if: IF '(' x . ')' '{' lSentencia '}'
   22       | IF '(' x . ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   23       | IF '(' x . ')' '{' lSentencia '}' ELSE ins_if

    ')'  shift, and go to state 114


State 77

   20 ciclo_while: WHILE '(' x . ')' '{' lSentencia '}'

    ')'  shift, and go to state 115


State 78

   19 ciclo_for: FOR '(' declaracion_var . z x z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 67

    $default  reduce using rule 37 (z)

    z  go to state 116


State 79

   44 declaracion_var: tipo . ID
   45                | tipo . ID '=' x

    ID  shift, and go to state 117


State 80

   46 declaracion_vector: VECTOR MENOR tipo . MAYOR ID
   47                   | VECTOR MENOR tipo . MAYOR ID '=' '[' lparam ']'

    MAYOR  shift, and go to state 118


State 81

   71 expr: ID INCREMENT .

    $default  reduce using rule 71 (expr)


State 82

   73 expr: ID DECREMENT .

    $default  reduce using rule 73 (expr)


State 83

   77 expr: ID '[' . lparam ']'

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    lparam   go to state 119
    x        go to state 72
    cond     go to state 62
    expr     go to state 63


State 84

   69 expr: '(' . expr ')'

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 120


State 85

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr
   74     | MENOS expr .

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 74 (expr)


State 86

   51 cond: cond . OR cond
   52     | cond . AND cond
   53     | NOT cond .

    AND  shift, and go to state 91
    OR   shift, and go to state 92

    AND       [reduce using rule 53 (cond)]
    OR        [reduce using rule 53 (cond)]
    $default  reduce using rule 53 (cond)


State 87

   70 expr: INCREMENT ID .

    $default  reduce using rule 70 (expr)


State 88

   72 expr: DECREMENT ID .

    $default  reduce using rule 72 (expr)


State 89

   51 cond: cond . OR cond
   52     | cond . AND cond
   54     | '(' cond . ')'

    AND  shift, and go to state 91
    OR   shift, and go to state 92
    ')'  shift, and go to state 121


State 90

   55 cond: expr . oprel expr
   56     | expr .
   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr
   69     | '(' expr . ')'

    SUMA            shift, and go to state 93
    MENOS           shift, and go to state 94
    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98
    MENOR_IGUAL     shift, and go to state 99
    MAYOR_IGUAL     shift, and go to state 100
    IGUAL_IGUAL     shift, and go to state 101
    DIFERENTE       shift, and go to state 102
    MENOR           shift, and go to state 103
    MAYOR           shift, and go to state 104
    ')'             shift, and go to state 122

    ')'       [reduce using rule 56 (cond)]
    $default  reduce using rule 56 (cond)

    oprel  go to state 105


State 91

   52 cond: cond AND . cond

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    cond     go to state 123
    expr     go to state 63


State 92

   51 cond: cond OR . cond

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    cond     go to state 124
    expr     go to state 63


State 93

   63 expr: expr SUMA . expr

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 125


State 94

   64 expr: expr MENOS . expr

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 126


State 95

   67 expr: expr MOD . expr

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 127


State 96

   65 expr: expr MULTIPLICACION . expr

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 128


State 97

   66 expr: expr DIVISION . expr

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 129


State 98

   68 expr: expr EXPONENCIAL . expr

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 130


State 99

   60 oprel: MENOR_IGUAL .

    $default  reduce using rule 60 (oprel)


State 100

   61 oprel: MAYOR_IGUAL .

    $default  reduce using rule 61 (oprel)


State 101

   59 oprel: IGUAL_IGUAL .

    $default  reduce using rule 59 (oprel)


State 102

   62 oprel: DIFERENTE .

    $default  reduce using rule 62 (oprel)


State 103

   58 oprel: MENOR .

    $default  reduce using rule 58 (oprel)


State 104

   57 oprel: MAYOR .

    $default  reduce using rule 57 (oprel)


State 105

   55 cond: expr oprel . expr

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 84

    llamada  go to state 60
    expr     go to state 131


State 106

   35 bloque: '{' lSentencia '}' .

    $default  reduce using rule 35 (bloque)


State 107

    2 lSentencia: lSentencia sentencia z .

    $default  reduce using rule 2 (lSentencia)


State 108

   38 declaracion_void: tipo ID '(' . ')' bloque
   39                 | tipo ID '(' . lasig ')' bloque

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7
    ')'   shift, and go to state 132

    lasig            go to state 133
    declaracion_var  go to state 134
    tipo             go to state 79


State 109

   45 declaracion_var: tipo ID '=' . x

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    x        go to state 135
    cond     go to state 62
    expr     go to state 63


State 110

   28 llamada: ID '(' lparam ')' .

    $default  reduce using rule 28 (llamada)


State 111

   42 lparam: lparam ',' . x

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    x        go to state 136
    cond     go to state 62
    expr     go to state 63


State 112

   49 asignacion_vector: ID '[' lparam ']' . '=' x

    '='  shift, and go to state 137


State 113

   34 imprimir: IMPR '(' lparam ')' .

    $default  reduce using rule 34 (imprimir)


State 114

   21 ins_if: IF '(' x ')' . '{' lSentencia '}'
   22       | IF '(' x ')' . '{' lSentencia '}' ELSE '{' lSentencia '}'
   23       | IF '(' x ')' . '{' lSentencia '}' ELSE ins_if

    '{'  shift, and go to state 138


State 115

   20 ciclo_while: WHILE '(' x ')' . '{' lSentencia '}'

    '{'  shift, and go to state 139


State 116

   19 ciclo_for: FOR '(' declaracion_var z . x z aumento ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    x        go to state 140
    cond     go to state 62
    expr     go to state 63


State 117

   44 declaracion_var: tipo ID .
   45                | tipo ID . '=' x

    '='  shift, and go to state 109

    $default  reduce using rule 44 (declaracion_var)


State 118

   46 declaracion_vector: VECTOR MENOR tipo MAYOR . ID
   47                   | VECTOR MENOR tipo MAYOR . ID '=' '[' lparam ']'

    ID  shift, and go to state 141


State 119

   42 lparam: lparam . ',' x
   77 expr: ID '[' lparam . ']'

    ']'  shift, and go to state 142
    ','  shift, and go to state 111


State 120

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr
   69     | '(' expr . ')'

    SUMA            shift, and go to state 93
    MENOS           shift, and go to state 94
    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98
    ')'             shift, and go to state 122


State 121

   54 cond: '(' cond ')' .

    $default  reduce using rule 54 (cond)


State 122

   69 expr: '(' expr ')' .

    $default  reduce using rule 69 (expr)


State 123

   51 cond: cond . OR cond
   52     | cond . AND cond
   52     | cond AND cond .

    $default  reduce using rule 52 (cond)


State 124

   51 cond: cond . OR cond
   51     | cond OR cond .
   52     | cond . AND cond

    AND  shift, and go to state 91

    $default  reduce using rule 51 (cond)


State 125

   63 expr: expr . SUMA expr
   63     | expr SUMA expr .
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98

    $default  reduce using rule 63 (expr)


State 126

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   64     | expr MENOS expr .
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98

    $default  reduce using rule 64 (expr)


State 127

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   67     | expr MOD expr .
   68     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 67 (expr)


State 128

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   65     | expr MULTIPLICACION expr .
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 65 (expr)


State 129

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   66     | expr DIVISION expr .
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 66 (expr)


State 130

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr
   68     | expr EXPONENCIAL expr .

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 68 (expr)


State 131

   55 cond: expr oprel expr .
   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 93
    MENOS           shift, and go to state 94
    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98

    MENOS     [reduce using rule 55 (cond)]
    $default  reduce using rule 55 (cond)


State 132

   38 declaracion_void: tipo ID '(' ')' . bloque

    '{'  shift, and go to state 17

    bloque  go to state 143


State 133

   39 declaracion_void: tipo ID '(' lasig . ')' bloque
   40 lasig: lasig . ',' declaracion_var

    ')'  shift, and go to state 144
    ','  shift, and go to state 145


State 134

   41 lasig: declaracion_var .

    $default  reduce using rule 41 (lasig)


State 135

   45 declaracion_var: tipo ID '=' x .

    $default  reduce using rule 45 (declaracion_var)


State 136

   42 lparam: lparam ',' x .

    $default  reduce using rule 42 (lparam)


State 137

   49 asignacion_vector: ID '[' lparam ']' '=' . x

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    x        go to state 146
    cond     go to state 62
    expr     go to state 63


State 138

   21 ins_if: IF '(' x ')' '{' . lSentencia '}'
   22       | IF '(' x ')' '{' . lSentencia '}' ELSE '{' lSentencia '}'
   23       | IF '(' x ')' '{' . lSentencia '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 147
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 139

   20 ciclo_while: WHILE '(' x ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 148
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 140

   19 ciclo_for: FOR '(' declaracion_var z x . z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 67

    $default  reduce using rule 37 (z)

    z  go to state 149


State 141

   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID .
   47                   | VECTOR MENOR tipo MAYOR ID . '=' '[' lparam ']'

    '='  shift, and go to state 150

    $default  reduce using rule 46 (declaracion_vector)


State 142

   77 expr: ID '[' lparam ']' .

    $default  reduce using rule 77 (expr)


State 143

   38 declaracion_void: tipo ID '(' ')' bloque .

    $default  reduce using rule 38 (declaracion_void)


State 144

   39 declaracion_void: tipo ID '(' lasig ')' . bloque

    '{'  shift, and go to state 17

    bloque  go to state 151


State 145

   40 lasig: lasig ',' . declaracion_var

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 152
    tipo             go to state 79


State 146

   49 asignacion_vector: ID '[' lparam ']' '=' x .

    $default  reduce using rule 49 (asignacion_vector)


State 147

    2 lSentencia: lSentencia . sentencia z
   21 ins_if: IF '(' x ')' '{' lSentencia . '}'
   22       | IF '(' x ')' '{' lSentencia . '}' ELSE '{' lSentencia '}'
   23       | IF '(' x ')' '{' lSentencia . '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 153

    sentencia           go to state 66
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 148

    2 lSentencia: lSentencia . sentencia z
   20 ciclo_while: WHILE '(' x ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 154

    sentencia           go to state 66
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 149

   19 ciclo_for: FOR '(' declaracion_var z x z . aumento ')' '{' lSentencia '}'

    ID         shift, and go to state 155
    INCREMENT  shift, and go to state 11

    aumento  go to state 156


State 150

   47 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' . '[' lparam ']'

    '['  shift, and go to state 157


State 151

   39 declaracion_void: tipo ID '(' lasig ')' bloque .

    $default  reduce using rule 39 (declaracion_void)


State 152

   40 lasig: lasig ',' declaracion_var .

    $default  reduce using rule 40 (lasig)


State 153

   21 ins_if: IF '(' x ')' '{' lSentencia '}' .
   22       | IF '(' x ')' '{' lSentencia '}' . ELSE '{' lSentencia '}'
   23       | IF '(' x ')' '{' lSentencia '}' . ELSE ins_if

    ELSE  shift, and go to state 158

    $default  reduce using rule 21 (ins_if)


State 154

   20 ciclo_while: WHILE '(' x ')' '{' lSentencia '}' .

    $default  reduce using rule 20 (ciclo_while)


State 155

   31 aumento: ID . INCREMENT

    INCREMENT  shift, and go to state 37


State 156

   19 ciclo_for: FOR '(' declaracion_var z x z aumento . ')' '{' lSentencia '}'

    ')'  shift, and go to state 159


State 157

   47 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' . lparam ']'

    NUMERO     shift, and go to state 49
    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    FLOAT      shift, and go to state 52
    MENOS      shift, and go to state 53
    TRUE       shift, and go to state 54
    FALSE      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 57
    DECREMENT  shift, and go to state 58
    '('        shift, and go to state 59

    llamada  go to state 60
    lparam   go to state 160
    x        go to state 72
    cond     go to state 62
    expr     go to state 63


State 158

   22 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE . '{' lSentencia '}'
   23       | IF '(' x ')' '{' lSentencia '}' ELSE . ins_if

    IF   shift, and go to state 8
    '{'  shift, and go to state 161

    ins_if  go to state 162


State 159

   19 ciclo_for: FOR '(' declaracion_var z x z aumento ')' . '{' lSentencia '}'

    '{'  shift, and go to state 163


State 160

   42 lparam: lparam . ',' x
   47 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' lparam . ']'

    ']'  shift, and go to state 164
    ','  shift, and go to state 111


State 161

   22 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 165
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 162

   23 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE ins_if .

    $default  reduce using rule 23 (ins_if)


State 163

   19 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 166
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 164

   47 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' lparam ']' .

    $default  reduce using rule 47 (declaracion_vector)


State 165

    2 lSentencia: lSentencia . sentencia z
   22 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 167

    sentencia           go to state 66
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 166

    2 lSentencia: lSentencia . sentencia z
   19 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 168

    sentencia           go to state 66
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    asignacion_vector   go to state 35
    tipo                go to state 36


State 167

   22 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}' .

    $default  reduce using rule 22 (ins_if)


State 168

   19 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}' .

    $default  reduce using rule 19 (ciclo_for)
